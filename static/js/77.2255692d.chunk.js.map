{"version":3,"file":"static/js/77.2255692d.chunk.js","mappings":"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","sources":["Movie-API/api.js","webpack://goit-react-hw-05-movies/./src/Pages/Movies/MoviesPage.module.css?a0d5","Pages/Movies/MoviesPage.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","webpack://goit-react-hw-05-movies/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'acbe04d9b6826898170f4d9e0758e12a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"MoviesPage_inputWrapper__QfOXH\",\"input\":\"MoviesPage_input__oEK8B\"};","import React, { useEffect, useState } from 'react';\nimport { fetchMovieByQuery } from 'Movie-API/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Outlet, useSearchParams, useParams } from 'react-router-dom';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? ''; // Default to an empty string\n  const { movieId } = useParams();\n  console.log('movieId', movieId);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!movieName.trim()) {\n        setMovies([]); // Clear movies when search is empty\n        return;\n      }\n      setIsLoading(true);\n\n      try {\n        const movies = await fetchMovieByQuery(movieName);\n        console.log('movies', movies);\n        setMovies(movies);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieName]);\n\n  return (\n    <div>\n      <div className={css.inputWrapper}>\n        <input\n          type=\"text\"\n          className={css.input}\n          onChange={e => updateQueryString(e.target.value)}\n          placeholder=\"Search movies...\"\n          value={movieName}\n        />\n      </div>\n      {isLoading ? (\n        <p style={{ textAlign: 'center' }}>Loading...</p>\n      ) : (\n        <MovieList movies={movies} />\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieListItem_movieItem__mZL09\",\"movieLink\":\"MovieListItem_movieLink__QdmjJ\"};","import PropTypes from 'prop-types';\nimport css from './MovieListItem.module.css';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieListItem = ({ id, title }) => {\n  const location = useLocation();\n\n  return (\n    <li className={css.movieItem} key={id}>\n      <Link\n        to={`/movies/${id}`}\n        state={{\n          from: location,\n          movieTitle: 'Random string that i want to pass',\n        }}\n        className={css.movieLink}\n      >\n        <h3>{title}</h3>\n      </Link>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};","import PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\nimport { MovieListItem } from 'components/MovieListItem/MovieListItem';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={css.movieList}>\n      {movies.map(({ id, title }) => (\n        <MovieListItem key={id} id={id} title={title} />\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useParams","console","log","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovies","_movies","trim","t0","error","_jsxs","children","_jsx","className","css","type","onChange","e","query","target","value","placeholder","style","textAlign","MovieList","Outlet","MovieListItem","id","title","location","useLocation","Link","to","state","from","movieTitle","map"],"sourceRoot":""}